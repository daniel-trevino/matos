/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Matos, MatosInterface } from "../Matos";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TOKENS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "onSaleMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620022723803806200227283398101604081905262000034916200017f565b6040518060800160405280605581526020016200221d6055913962000059816200006e565b50620000653362000087565b608052620001d5565b805162000083906002906020840190620000d9565b5050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000e79062000198565b90600052602060002090601f0160209004810192826200010b576000855562000156565b82601f106200012657805160ff191683800117855562000156565b8280016001018555821562000156579182015b828111156200015657825182559160200191906001019062000139565b506200016492915062000168565b5090565b5b8082111562000164576000815560010162000169565b60006020828403121562000191578081fd5b5051919050565b600181811c90821680620001ad57607f821691505b60208210811415620001cf57634e487b7160e01b600052602260045260246000fd5b50919050565b608051612025620001f86000396000818161020f0152610a4e01526120256000f3fe60806040526004361061011e5760003560e01c80634f558e79116100a0578063c3ad71e611610064578063c3ad71e61461035c578063e985e9c51461036f578063f242432a146103b8578063f2fde38b146103d8578063f47c84c5146103f857600080fd5b80634f558e79146102a3578063715018a6146102d25780638da5cb5b146102e7578063a22cb4651461030f578063bd85b0391461032f57600080fd5b80632eb2c2d6116100e75780632eb2c2d6146101dd5780632eb4a7ab146101fd5780633b7fcdca146102315780633ccfd60b146102615780634e1273f41461027657600080fd5b8062fdd58e1461012357806301ffc9a71461015657806302fe5305146101865780630e89341c146101a85780631249c58b146101d5575b600080fd5b34801561012f57600080fd5b5061014361013e366004611961565b61040d565b6040519081526020015b60405180910390f35b34801561016257600080fd5b50610176610171366004611ac5565b6104a4565b604051901515815260200161014d565b34801561019257600080fd5b506101a66101a1366004611afd565b6104f6565b005b3480156101b457600080fd5b506101c86101c3366004611b4b565b61052c565b60405161014d9190611ccc565b6101a66105c0565b3480156101e957600080fd5b506101a66101f836600461181e565b61068c565b34801561020957600080fd5b506101437f000000000000000000000000000000000000000000000000000000000000000081565b34801561023d57600080fd5b5061017661024c3660046117d2565b60056020526000908152604090205460ff1681565b34801561026d57600080fd5b506101a6610723565b34801561028257600080fd5b5061029661029136600461198a565b610780565b60405161014d9190611c8b565b3480156102af57600080fd5b506101766102be366004611b4b565b600090815260036020526040902054151590565b3480156102de57600080fd5b506101a66108e2565b3480156102f357600080fd5b506004546040516001600160a01b03909116815260200161014d565b34801561031b57600080fd5b506101a661032a366004611927565b610916565b34801561033b57600080fd5b5061014361034a366004611b4b565b60009081526003602052604090205490565b6101a661036a366004611a55565b610921565b34801561037b57600080fd5b5061017661038a3660046117ec565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b3480156103c457600080fd5b506101a66103d33660046118c4565b610b1c565b3480156103e457600080fd5b506101a66103f33660046117d2565b610ba3565b34801561040457600080fd5b50610143606481565b60006001600160a01b03831661047e5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806104d557506001600160e01b031982166303a24d0760e21b145b806104f057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146105205760405162461bcd60e51b815260040161047590611e00565b61052981610c3b565b50565b60606002805461053b90611e88565b80601f016020809104026020016040519081016040528092919081815260200182805461056790611e88565b80156105b45780601f10610589576101008083540402835291602001916105b4565b820191906000526020600020905b81548152906001019060200180831161059757829003601f168201915b50505050509050919050565b6000805260036020527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff546064906105f9906001611e59565b11156106175760405162461bcd60e51b815260040161047590611d6c565b3466470de4df8200001461066d5760405162461bcd60e51b815260206004820152601f60248201527f45746865722076616c75652073656e74206973206e6f7420636f7272656374006044820152606401610475565b61068a336000600160405180602001604052806000815250610c4e565b565b6001600160a01b0385163314806106a857506106a8853361038a565b61070f5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610475565b61071c8585858585610d5e565b5050505050565b6004546001600160a01b0316331461074d5760405162461bcd60e51b815260040161047590611e00565b6040514790339082156108fc029083906000818181858888f1935050505015801561077c573d6000803e3d6000fd5b5050565b606081518351146107e55760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610475565b6000835167ffffffffffffffff81111561080f57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610838578160200160208202803683370190505b50905060005b84518110156108da5761089f85828151811061086a57634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061089257634e487b7160e01b600052603260045260246000fd5b602002602001015161040d565b8282815181106108bf57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526108d381611ef0565b905061083e565b509392505050565b6004546001600160a01b0316331461090c5760405162461bcd60e51b815260040161047590611e00565b61068a6000610f65565b61077c338383610fb7565b6000805260036020527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff5460649061095a906001611e59565b11156109785760405162461bcd60e51b815260040161047590611d6c565b3360009081526005602052604090205460ff16156109d85760405162461bcd60e51b815260206004820152601760248201527f4164647265737320616c726561647920636c61696d65640000000000000000006044820152606401610475565b6040516bffffffffffffffffffffffff193360601b1660208201523460348201526000906054016040516020818303038152906040528051906020012090506000610a798484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508691506110989050565b905080610adf5760405162461bcd60e51b815260206004820152602e60248201527f41646472657373206973206e6f7420656c656769626c6520666f72206d696e7460448201526d081dda5d1a08191a5cd8dbdd5b9d60921b6064820152608401610475565b610afc336000600160405180602001604052806000815250610c4e565b5050336000908152600560205260409020805460ff191660011790555050565b6001600160a01b038516331480610b385750610b38853361038a565b610b965760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610475565b61071c85858585856110ae565b6004546001600160a01b03163314610bcd5760405162461bcd60e51b815260040161047590611e00565b6001600160a01b038116610c325760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610475565b61052981610f65565b805161077c906002906020840190611625565b6001600160a01b038416610cae5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610475565b33610cce81600087610cbf886111cb565b610cc8886111cb565b87611224565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610cfe908490611e59565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461071c81600087878787611232565b8151835114610dc05760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610475565b6001600160a01b038416610de65760405162461bcd60e51b815260040161047590611d27565b33610df5818787878787611224565b60005b8451811015610ef7576000858281518110610e2357634e487b7160e01b600052603260045260246000fd5b602002602001015190506000858381518110610e4f57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610e9f5760405162461bcd60e51b815260040161047590611db6565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610edc908490611e59565b9250508190555050505080610ef090611ef0565b9050610df8565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610f47929190611c9e565b60405180910390a4610f5d81878787878761139d565b505050505050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316141561102b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610475565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000826110a58584611467565b14949350505050565b6001600160a01b0384166110d45760405162461bcd60e51b815260040161047590611d27565b336110e4818787610cbf886111cb565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156111255760405162461bcd60e51b815260040161047590611db6565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611162908490611e59565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46111c2828888888888611232565b50505050505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061121357634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b610f5d8686868686866114e1565b6001600160a01b0384163b15610f5d5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906112769089908990889088908890600401611c46565b602060405180830381600087803b15801561129057600080fd5b505af19250505080156112c0575060408051601f3d908101601f191682019092526112bd91810190611ae1565b60015b61136d576112cc611f37565b806308c379a0141561130657506112e1611f4f565b806112ec5750611308565b8060405162461bcd60e51b81526004016104759190611ccc565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610475565b6001600160e01b0319811663f23a6e6160e01b146111c25760405162461bcd60e51b815260040161047590611cdf565b6001600160a01b0384163b15610f5d5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906113e19089908990889088908890600401611be8565b602060405180830381600087803b1580156113fb57600080fd5b505af192505050801561142b575060408051601f3d908101601f1916820190925261142891810190611ae1565b60015b611437576112cc611f37565b6001600160e01b0319811663bc197c8160e01b146111c25760405162461bcd60e51b815260040161047590611cdf565b600081815b84518110156108da57600085828151811061149757634e487b7160e01b600052603260045260246000fd5b602002602001015190508083116114bd57600083815260208290526040902092506114ce565b600081815260208490526040902092505b50806114d981611ef0565b91505061146c565b6001600160a01b0385166115845760005b83518110156115825782818151811061151b57634e487b7160e01b600052603260045260246000fd5b60200260200101516003600086848151811061154757634e487b7160e01b600052603260045260246000fd5b60200260200101518152602001908152602001600020600082825461156c9190611e59565b9091555061157b905081611ef0565b90506114f2565b505b6001600160a01b038416610f5d5760005b83518110156111c2578281815181106115be57634e487b7160e01b600052603260045260246000fd5b6020026020010151600360008684815181106115ea57634e487b7160e01b600052603260045260246000fd5b60200260200101518152602001908152602001600020600082825461160f9190611e71565b9091555061161e905081611ef0565b9050611595565b82805461163190611e88565b90600052602060002090601f0160209004810192826116535760008555611699565b82601f1061166c57805160ff1916838001178555611699565b82800160010185558215611699579182015b8281111561169957825182559160200191906001019061167e565b506116a59291506116a9565b5090565b5b808211156116a557600081556001016116aa565b600067ffffffffffffffff8311156116d8576116d8611f21565b6040516116ef601f8501601f191660200182611ec3565b80915083815284848401111561170457600080fd5b83836020830137600060208583010152509392505050565b80356001600160a01b038116811461173357600080fd5b919050565b600082601f830112611748578081fd5b8135602061175582611e35565b6040516117628282611ec3565b8381528281019150858301600585901b87018401881015611781578586fd5b855b8581101561179f57813584529284019290840190600101611783565b5090979650505050505050565b600082601f8301126117bc578081fd5b6117cb838335602085016116be565b9392505050565b6000602082840312156117e3578081fd5b6117cb8261171c565b600080604083850312156117fe578081fd5b6118078361171c565b91506118156020840161171c565b90509250929050565b600080600080600060a08688031215611835578081fd5b61183e8661171c565b945061184c6020870161171c565b9350604086013567ffffffffffffffff80821115611868578283fd5b61187489838a01611738565b94506060880135915080821115611889578283fd5b61189589838a01611738565b935060808801359150808211156118aa578283fd5b506118b7888289016117ac565b9150509295509295909350565b600080600080600060a086880312156118db578081fd5b6118e48661171c565b94506118f26020870161171c565b93506040860135925060608601359150608086013567ffffffffffffffff81111561191b578182fd5b6118b7888289016117ac565b60008060408385031215611939578182fd5b6119428361171c565b915060208301358015158114611956578182fd5b809150509250929050565b60008060408385031215611973578182fd5b61197c8361171c565b946020939093013593505050565b6000806040838503121561199c578182fd5b823567ffffffffffffffff808211156119b3578384fd5b818501915085601f8301126119c6578384fd5b813560206119d382611e35565b6040516119e08282611ec3565b8381528281019150858301600585901b870184018b10156119ff578889fd5b8896505b84871015611a2857611a148161171c565b835260019690960195918301918301611a03565b5096505086013592505080821115611a3e578283fd5b50611a4b85828601611738565b9150509250929050565b60008060208385031215611a67578081fd5b823567ffffffffffffffff80821115611a7e578283fd5b818501915085601f830112611a91578283fd5b813581811115611a9f578384fd5b8660208260051b8501011115611ab3578384fd5b60209290920196919550909350505050565b600060208284031215611ad6578081fd5b81356117cb81611fd9565b600060208284031215611af2578081fd5b81516117cb81611fd9565b600060208284031215611b0e578081fd5b813567ffffffffffffffff811115611b24578182fd5b8201601f81018413611b34578182fd5b611b43848235602084016116be565b949350505050565b600060208284031215611b5c578081fd5b5035919050565b6000815180845260208085019450808401835b83811015611b9257815187529582019590820190600101611b76565b509495945050505050565b60008151808452815b81811015611bc257602081850181015186830182015201611ba6565b81811115611bd35782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611c1490830186611b63565b8281036060840152611c268186611b63565b90508281036080840152611c3a8185611b9d565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611c8090830184611b9d565b979650505050505050565b6020815260006117cb6020830184611b63565b604081526000611cb16040830185611b63565b8281036020840152611cc38185611b63565b95945050505050565b6020815260006117cb6020830184611b9d565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f507572636861736520776f756c6420657863656564206d617820737570706c79604082015269206f6620746f6b656e7360b01b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600067ffffffffffffffff821115611e4f57611e4f611f21565b5060051b60200190565b60008219821115611e6c57611e6c611f0b565b500190565b600082821015611e8357611e83611f0b565b500390565b600181811c90821680611e9c57607f821691505b60208210811415611ebd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611ee957611ee9611f21565b6040525050565b6000600019821415611f0457611f04611f0b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115611f4c57600481823e5160e01c5b90565b600060443d1015611f5d5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611f8d57505050505090565b8285019150815181811115611fa55750505050505090565b843d8701016020828501011115611fbf5750505050505090565b611fce60208286010187611ec3565b509095945050505050565b6001600160e01b03198116811461052957600080fdfea2646970667358221220a3b6a44961dd5333c5f3fea8ae5114d73569a4b777faede5feec126a0565a20664736f6c6343000804003368747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d51786f384a6f676f6e3344614335397931436a5657486e73395169514462787239665150646f3556706250592f7b69647d";

export class Matos__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _merkleRoot: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Matos> {
    return super.deploy(_merkleRoot, overrides || {}) as Promise<Matos>;
  }
  getDeployTransaction(
    _merkleRoot: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_merkleRoot, overrides || {});
  }
  attach(address: string): Matos {
    return super.attach(address) as Matos;
  }
  connect(signer: Signer): Matos__factory {
    return super.connect(signer) as Matos__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MatosInterface {
    return new utils.Interface(_abi) as MatosInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Matos {
    return new Contract(address, _abi, signerOrProvider) as Matos;
  }
}
