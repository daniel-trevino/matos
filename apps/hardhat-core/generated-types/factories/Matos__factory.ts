/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Matos, MatosInterface } from "../Matos";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TOKENS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "onSaleMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002b6938038062002b69833981016040819052620000349162000841565b8162000040816200015f565b506200004c3362000178565b60808190526040805160148082526102a08201909252600091602082016102808036833750506040805160148082526102a082019092529293506000929150602082016102808036833701905050905060005b6014811015620001315780838281518110620000cb57634e487b7160e01b600052603260045260246000fd5b60200260200101818152505080828281518110620000f957634e487b7160e01b600052603260045260246000fd5b6020026020010181815250506200011c6005620001ca60201b62000b871760201c565b80620001288162000ad2565b9150506200009f565b506200015533838360405180602001604052806000815250620001d360201b60201c565b5050505062000bc4565b8051620001749060029060208401906200076a565b5050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b6001600160a01b038416620002395760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084015b60405180910390fd5b81518351146200029d5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840162000230565b33620002af81600087878787620003e1565b60005b84518110156200036e57838181518110620002dd57634e487b7160e01b600052603260045260246000fd5b60200260200101516000808784815181106200030957634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254620003539190620009fe565b90915550819050620003658162000ad2565b915050620002b2565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051620003c1929190620009b7565b60405180910390a4620003da8160008787878762000404565b5050505050565b620003fc868686868686620005ea60201b62000b901760201c565b505050505050565b62000423846001600160a01b03166200075b60201b62000cde1760201c565b15620003fc5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906200045f908990899088908890889060040162000953565b602060405180830381600087803b1580156200047a57600080fd5b505af1925050508015620004ad575060408051601f3d908101601f19168201909252620004aa9181019062000810565b60015b6200056e57620004bc62000b1c565b806308c379a01415620004fd5750620004d462000b35565b80620004e15750620004ff565b8060405162461bcd60e51b8152600401620002309190620009e9565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840162000230565b6001600160e01b0319811663bc197c8160e01b14620005e15760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840162000230565b50505050505050565b62000605868686868686620003fc60201b62000cd61760201c565b6001600160a01b038516620006b15760005b8351811015620006af578281815181106200064257634e487b7160e01b600052603260045260246000fd5b6020026020010151600360008684815181106200066f57634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206000828254620006969190620009fe565b90915550620006a790508162000ad2565b905062000617565b505b6001600160a01b038416620003fc5760005b8351811015620005e157828181518110620006ee57634e487b7160e01b600052603260045260246000fd5b6020026020010151600360008684815181106200071b57634e487b7160e01b600052603260045260246000fd5b60200260200101518152602001908152602001600020600082825462000742919062000a19565b909155506200075390508162000ad2565b9050620006c3565b6001600160a01b03163b151590565b828054620007789062000a66565b90600052602060002090601f0160209004810192826200079c5760008555620007e7565b82601f10620007b757805160ff1916838001178555620007e7565b82800160010185558215620007e7579182015b82811115620007e7578251825591602001919060010190620007ca565b50620007f5929150620007f9565b5090565b5b80821115620007f55760008155600101620007fa565b60006020828403121562000822578081fd5b81516001600160e01b0319811681146200083a578182fd5b9392505050565b6000806040838503121562000854578081fd5b82516001600160401b03808211156200086b578283fd5b818501915085601f8301126200087f578283fd5b81518181111562000894576200089462000b06565b6040519150620008af601f8201601f19166020018362000aa3565b808252866020828501011115620008c4578384fd5b620008d781602084016020860162000a33565b50602094909401519395939450505050565b6000815180845260208085019450808401835b838110156200091a57815187529582019590820190600101620008fc565b509495945050505050565b600081518084526200093f81602086016020860162000a33565b601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a0604082018190526000906200098190830186620008e9565b8281036060840152620009958186620008e9565b90508281036080840152620009ab818562000925565b98975050505050505050565b604081526000620009cc6040830185620008e9565b8281036020840152620009e08185620008e9565b95945050505050565b6020815260006200083a602083018462000925565b6000821982111562000a145762000a1462000af0565b500190565b60008282101562000a2e5762000a2e62000af0565b500390565b60005b8381101562000a5057818101518382015260200162000a36565b8381111562000a60576000848401525b50505050565b600181811c9082168062000a7b57607f821691505b6020821081141562000a9d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f191681016001600160401b038111828210171562000acb5762000acb62000b06565b6040525050565b600060001982141562000ae95762000ae962000af0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111562000b3257600481823e5160e01c5b90565b600060443d101562000b445790565b6040516003193d81016004833e81513d6001600160401b03808311602484018310171562000b7457505050505090565b828501915081518181111562000b8d5750505050505090565b843d870101602082850101111562000ba85750505050505090565b62000bb96020828601018762000aa3565b509095945050505050565b608051611f8262000be760003960008181610224015261097a0152611f826000f3fe60806040526004361061011e5760003560e01c80634f558e79116100a0578063c3ad71e611610064578063c3ad71e614610341578063e985e9c514610354578063f242432a1461039d578063f2fde38b146103bd578063f47c84c5146103dd57600080fd5b80634f558e7914610288578063715018a6146102b75780638da5cb5b146102cc578063a22cb465146102f4578063bd85b0391461031457600080fd5b806318160ddd116100e757806318160ddd146101dd5780632eb2c2d6146101f25780632eb4a7ab146102125780633ccfd60b146102465780634e1273f41461025b57600080fd5b8062fdd58e1461012357806301ffc9a71461015657806302fe5305146101865780630e89341c146101a85780631249c58b146101d5575b600080fd5b34801561012f57600080fd5b5061014361013e3660046118be565b6103f2565b6040519081526020015b60405180910390f35b34801561016257600080fd5b50610176610171366004611a22565b610489565b604051901515815260200161014d565b34801561019257600080fd5b506101a66101a1366004611a5a565b6104db565b005b3480156101b457600080fd5b506101c86101c3366004611aa8565b610511565b60405161014d9190611c29565b6101a66105a5565b3480156101e957600080fd5b5061014361065d565b3480156101fe57600080fd5b506101a661020d36600461177b565b61066d565b34801561021e57600080fd5b506101437f000000000000000000000000000000000000000000000000000000000000000081565b34801561025257600080fd5b506101a6610704565b34801561026757600080fd5b5061027b6102763660046118e7565b610761565b60405161014d9190611be8565b34801561029457600080fd5b506101766102a3366004611aa8565b600090815260036020526040902054151590565b3480156102c357600080fd5b506101a66108c3565b3480156102d857600080fd5b506004546040516001600160a01b03909116815260200161014d565b34801561030057600080fd5b506101a661030f366004611884565b6108f9565b34801561032057600080fd5b5061014361032f366004611aa8565b60009081526003602052604090205490565b6101a661034f3660046119b2565b610904565b34801561036057600080fd5b5061017661036f366004611749565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b3480156103a957600080fd5b506101a66103b8366004611821565b610a68565b3480156103c957600080fd5b506101a66103d836600461172f565b610aef565b3480156103e957600080fd5b50610143606481565b60006001600160a01b0383166104635760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806104ba57506001600160e01b031982166303a24d0760e21b145b806104d557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146105055760405162461bcd60e51b815260040161045a90611d5d565b61050e81610ced565b50565b60606002805461052090611de5565b80601f016020809104026020016040519081016040528092919081815260200182805461054c90611de5565b80156105995780601f1061056e57610100808354040283529160200191610599565b820191906000526020600020905b81548152906001019060200180831161057c57829003601f168201915b50505050509050919050565b60006105b060055490565b905060646105bf826001611db6565b11156105dd5760405162461bcd60e51b815260040161045a90611cc9565b346611c37937e08000146106335760405162461bcd60e51b815260206004820152601f60248201527f45746865722076616c75652073656e74206973206e6f7420636f727265637400604482015260640161045a565b61064f3382600160405180602001604052806000815250610d00565b61050e600580546001019055565b600061066860055490565b905090565b6001600160a01b0385163314806106895750610689853361036f565b6106f05760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161045a565b6106fd8585858585610e10565b5050505050565b6004546001600160a01b0316331461072e5760405162461bcd60e51b815260040161045a90611d5d565b6040514790339082156108fc029083906000818181858888f1935050505015801561075d573d6000803e3d6000fd5b5050565b606081518351146107c65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161045a565b6000835167ffffffffffffffff8111156107f057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610819578160200160208202803683370190505b50905060005b84518110156108bb5761088085828151811061084b57634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061087357634e487b7160e01b600052603260045260246000fd5b60200260200101516103f2565b8282815181106108a057634e487b7160e01b600052603260045260246000fd5b60209081029190910101526108b481611e4d565b905061081f565b509392505050565b6004546001600160a01b031633146108ed5760405162461bcd60e51b815260040161045a90611d5d565b6108f7600061100f565b565b61075d338383611061565b6040516bffffffffffffffffffffffff193360601b16602082015234603482015260009060540160405160208183030381529060405280519060200120905060006109a58484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508691506111429050565b905080610a065760405162461bcd60e51b815260206004820152602960248201527f7468697320746f6b656e496420697320726573657276656420666f7220616e6f6044820152683a3432b9103ab9b2b960b91b606482015260840161045a565b6000610a1160055490565b90506064610a20826001611db6565b1115610a3e5760405162461bcd60e51b815260040161045a90611cc9565b610a5a3382600160405180602001604052806000815250610d00565b6106fd600580546001019055565b6001600160a01b038516331480610a845750610a84853361036f565b610ae25760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161045a565b6106fd8585858585611158565b6004546001600160a01b03163314610b195760405162461bcd60e51b815260040161045a90611d5d565b6001600160a01b038116610b7e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161045a565b61050e8161100f565b80546001019055565b6001600160a01b038516610c335760005b8351811015610c3157828181518110610bca57634e487b7160e01b600052603260045260246000fd5b602002602001015160036000868481518110610bf657634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206000828254610c1b9190611db6565b90915550610c2a905081611e4d565b9050610ba1565b505b6001600160a01b038416610cd65760005b8351811015610cd457828181518110610c6d57634e487b7160e01b600052603260045260246000fd5b602002602001015160036000868481518110610c9957634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206000828254610cbe9190611dce565b90915550610ccd905081611e4d565b9050610c44565b505b505050505050565b6001600160a01b03163b151590565b805161075d906002906020840190611582565b6001600160a01b038416610d605760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161045a565b33610d8081600087610d718861126c565b610d7a8861126c565b876112c5565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610db0908490611db6565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46106fd816000878787876112d3565b8151835114610e725760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161045a565b6001600160a01b038416610e985760405162461bcd60e51b815260040161045a90611c84565b33610ea78187878787876112c5565b60005b8451811015610fa9576000858281518110610ed557634e487b7160e01b600052603260045260246000fd5b602002602001015190506000858381518110610f0157634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610f515760405162461bcd60e51b815260040161045a90611d13565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610f8e908490611db6565b9250508190555050505080610fa290611e4d565b9050610eaa565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610ff9929190611bfb565b60405180910390a4610cd681878787878761143e565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156110d55760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161045a565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60008261114f8584611508565b14949350505050565b6001600160a01b03841661117e5760405162461bcd60e51b815260040161045a90611c84565b3361118e818787610d718861126c565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156111cf5760405162461bcd60e51b815260040161045a90611d13565b6000858152602081815260408083206001600160a01b038b811685529252808320878503905590881682528120805486929061120c908490611db6565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610cd48288888888886112d3565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106112b457634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b610cd6868686868686610b90565b6001600160a01b0384163b15610cd65760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113179089908990889088908890600401611ba3565b602060405180830381600087803b15801561133157600080fd5b505af1925050508015611361575060408051601f3d908101601f1916820190925261135e91810190611a3e565b60015b61140e5761136d611e94565b806308c379a014156113a75750611382611eac565b8061138d57506113a9565b8060405162461bcd60e51b815260040161045a9190611c29565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161045a565b6001600160e01b0319811663f23a6e6160e01b14610cd45760405162461bcd60e51b815260040161045a90611c3c565b6001600160a01b0384163b15610cd65760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906114829089908990889088908890600401611b45565b602060405180830381600087803b15801561149c57600080fd5b505af19250505080156114cc575060408051601f3d908101601f191682019092526114c991810190611a3e565b60015b6114d85761136d611e94565b6001600160e01b0319811663bc197c8160e01b14610cd45760405162461bcd60e51b815260040161045a90611c3c565b600081815b84518110156108bb57600085828151811061153857634e487b7160e01b600052603260045260246000fd5b6020026020010151905080831161155e576000838152602082905260409020925061156f565b600081815260208490526040902092505b508061157a81611e4d565b91505061150d565b82805461158e90611de5565b90600052602060002090601f0160209004810192826115b057600085556115f6565b82601f106115c957805160ff19168380011785556115f6565b828001600101855582156115f6579182015b828111156115f65782518255916020019190600101906115db565b50611602929150611606565b5090565b5b808211156116025760008155600101611607565b600067ffffffffffffffff83111561163557611635611e7e565b60405161164c601f8501601f191660200182611e20565b80915083815284848401111561166157600080fd5b83836020830137600060208583010152509392505050565b80356001600160a01b038116811461169057600080fd5b919050565b600082601f8301126116a5578081fd5b813560206116b282611d92565b6040516116bf8282611e20565b8381528281019150858301600585901b870184018810156116de578586fd5b855b858110156116fc578135845292840192908401906001016116e0565b5090979650505050505050565b600082601f830112611719578081fd5b6117288383356020850161161b565b9392505050565b600060208284031215611740578081fd5b61172882611679565b6000806040838503121561175b578081fd5b61176483611679565b915061177260208401611679565b90509250929050565b600080600080600060a08688031215611792578081fd5b61179b86611679565b94506117a960208701611679565b9350604086013567ffffffffffffffff808211156117c5578283fd5b6117d189838a01611695565b945060608801359150808211156117e6578283fd5b6117f289838a01611695565b93506080880135915080821115611807578283fd5b5061181488828901611709565b9150509295509295909350565b600080600080600060a08688031215611838578081fd5b61184186611679565b945061184f60208701611679565b93506040860135925060608601359150608086013567ffffffffffffffff811115611878578182fd5b61181488828901611709565b60008060408385031215611896578182fd5b61189f83611679565b9150602083013580151581146118b3578182fd5b809150509250929050565b600080604083850312156118d0578182fd5b6118d983611679565b946020939093013593505050565b600080604083850312156118f9578182fd5b823567ffffffffffffffff80821115611910578384fd5b818501915085601f830112611923578384fd5b8135602061193082611d92565b60405161193d8282611e20565b8381528281019150858301600585901b870184018b101561195c578889fd5b8896505b848710156119855761197181611679565b835260019690960195918301918301611960565b509650508601359250508082111561199b578283fd5b506119a885828601611695565b9150509250929050565b600080602083850312156119c4578081fd5b823567ffffffffffffffff808211156119db578283fd5b818501915085601f8301126119ee578283fd5b8135818111156119fc578384fd5b8660208260051b8501011115611a10578384fd5b60209290920196919550909350505050565b600060208284031215611a33578081fd5b813561172881611f36565b600060208284031215611a4f578081fd5b815161172881611f36565b600060208284031215611a6b578081fd5b813567ffffffffffffffff811115611a81578182fd5b8201601f81018413611a91578182fd5b611aa08482356020840161161b565b949350505050565b600060208284031215611ab9578081fd5b5035919050565b6000815180845260208085019450808401835b83811015611aef57815187529582019590820190600101611ad3565b509495945050505050565b60008151808452815b81811015611b1f57602081850181015186830182015201611b03565b81811115611b305782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611b7190830186611ac0565b8281036060840152611b838186611ac0565b90508281036080840152611b978185611afa565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611bdd90830184611afa565b979650505050505050565b6020815260006117286020830184611ac0565b604081526000611c0e6040830185611ac0565b8281036020840152611c208185611ac0565b95945050505050565b6020815260006117286020830184611afa565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f507572636861736520776f756c6420657863656564206d617820737570706c79604082015269206f6620746f6b656e7360b01b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600067ffffffffffffffff821115611dac57611dac611e7e565b5060051b60200190565b60008219821115611dc957611dc9611e68565b500190565b600082821015611de057611de0611e68565b500390565b600181811c90821680611df957607f821691505b60208210811415611e1a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611e4657611e46611e7e565b6040525050565b6000600019821415611e6157611e61611e68565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115611ea957600481823e5160e01c5b90565b600060443d1015611eba5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611eea57505050505090565b8285019150815181811115611f025750505050505090565b843d8701016020828501011115611f1c5750505050505090565b611f2b60208286010187611e20565b509095945050505050565b6001600160e01b03198116811461050e57600080fdfea26469706673582212204d48b43481453bdd172339e8d49fbebe1539414000d97f0d2dcc33a1b010cf4d64736f6c63430008040033";

type MatosConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MatosConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Matos__factory extends ContractFactory {
  constructor(...args: MatosConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Matos";
  }

  deploy(
    uri: string,
    _merkleRoot: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Matos> {
    return super.deploy(uri, _merkleRoot, overrides || {}) as Promise<Matos>;
  }
  getDeployTransaction(
    uri: string,
    _merkleRoot: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri, _merkleRoot, overrides || {});
  }
  attach(address: string): Matos {
    return super.attach(address) as Matos;
  }
  connect(signer: Signer): Matos__factory {
    return super.connect(signer) as Matos__factory;
  }
  static readonly contractName: "Matos";
  public readonly contractName: "Matos";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MatosInterface {
    return new utils.Interface(_abi) as MatosInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Matos {
    return new Contract(address, _abi, signerOrProvider) as Matos;
  }
}
